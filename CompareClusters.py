import csv

headers = ['Clusters', 'Intersecao']

with open('comparativo.csv','w') as out:
    # abre o arquivo csv que sera gerado
    output = csv.writer(out)
    output.writerow(headers)
    rows = [[0 for col in xrange(2)]]
    number_rowsk=0;
    number_rowsc=0;
    for k in xrange(1,2): 
        number_rowsk=0;            
        count=0;
        with open('/media/sf_Sistemas_Operacionais/Clusters-K-means/k-means-c' + str(9) + '.csv', 'rb') as clusterk:
                
                readerk = csv.DictReader(clusterk)
                
                for rowk in readerk:
                    number_rowsk = number_rowsk + 1;
                    
                    for c in xrange(1,2):  
                        number_rowsc =0;      
                        
                        with open('/media/sf_Sistemas_Operacionais/Clusters-FCM/c-means-c' + str(9) + '.csv', 'rb') as clusterc:
                            readerc = csv.DictReader(clusterc)
                            for rowc in readerc:
                                
                                number_rowsc = number_rowsc + 1;    
                                if rowk['MD5']!= str(0) and rowc['MD5']!= str(0):
                                    if rowk['MD5'] == rowc['MD5']:
                                             
                                           # rows[0][x]=rows[0][x]
                                        count = count +1;      
                            #print count;
                if count != 0: 
                    print 'K'+ str(9) + '('+ str(number_rowsk) + ')' + '/' + 'C' + str(9) + '(' + str(number_rowsc) + ')' + "=" + str(count);
                    
                    # 
                    
                        #numLinha=0;
                        #numColm=0;
                        #rows[numLinha][numColm] = 'K'+ str(9) + '('+ str(number_rowsk) + ')' + '/' + 'C' + str(c) + '(' + str(number_rowsc) + ')';
                        #rows[numLinha][numColm+1] = count;
                        #numLinha=numLinha+1;
                        #output.writerows(rows) 
                            
                         #   print 'cluster n ' + str(k)+ ' possui as seguintes coincidencicas = ' + str(count);
            
